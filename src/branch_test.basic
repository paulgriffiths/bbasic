10 REM ==============================================================
20 REM Branching statements test suite
30 REM ==============================================================
40 PROCgosub_multiple:CLEAR
50 PROCgosub_nested:CLEAR
60 PROCrepeat_nested:CLEAR
70 PROCrepeat_trailing:CLEAR
80 PROCrepeat_nested_single_line:CLEAR
90 PROCfor_simple:CLEAR
100 PROCfor_nested:CLEAR
110 PROCfor_unwinding:CLEAR
120 PROCproc_multi_level:CLEAR
130 PROCfn_basic:CLEAR
140 PROCfn_recursive:CLEAR
150 PROC_on_goto:CLEAR
160 PROC_on_gosub:CLEAR

1000 PRINT "End of tests"
1010 END

2000 DEF PROCgosub_multiple
2010 REM   ============================================================
2020 PRINT "1. Multiple GOSUBs with trailing statements"
2030 REM   ============================================================
2040 G$="A" : GOSUB 2100 : G$=G$+"C"
2050 G$=G$+"D"
2060 G$=G$+"E" : GOSUB 2200
2070 G$=G$+"G"
2080 GOSUB 2300 : GOSUB 2400 : GOSUB 2500 : G$=G$+"K"
2090 IF G$<>"ABCDEFGHIJK" PROCtrip_error
2100 ENDPROC

2110 G$=G$+"B"
2120 RETURN
2230 G$=G$+"F"
2240 RETURN
2350 G$=G$+"H"
2360 RETURN
2470 G$=G$+"I"
2480 RETURN
2590 G$=G$+"J"
2600 RETURN

3000 DEF PROCgosub_nested
3010 REM   ============================================================
3020 PRINT "2. GOSUBs nested five levels deep"
3030 REM   ============================================================
3040 v$="A"
3050 GOSUB 3100
3060 v$=v$+"I"
3070 IF v$<>"ABCDEFGHI" PROCtrip_error
3080 ENDPROC

3100 v$=v$+"B"
3110 GOSUB 3200
3120 v$=v$+"H"
3130 RETURN
3200 v$=v$+"C"
3210 GOSUB 3300
3220 v$=v$+"G"
3230 RETURN
3300 v$=v$+"D"
3310 GOSUB 3400
3320 v$=v$+"F"
3330 RETURN
3400 v$=v$+"E"
3410 RETURN

4000 DEF PROCrepeat_nested
4010 REM   ============================================================
4020 PRINT "3. Nested REPEAT loops"
4030 REM   ============================================================
4040 C%=1
4050 E%=100
4060 F%=200
4070 result=0
4080 REPEAT D%=1:E%=E%+20:F%=F%+30
4090 REPEAT
4100 result=result+(C%*10 + D%)
4110 D%=D%+1
4120 UNTIL D%=6
4130 C%=C%+1
4140 UNTIL C%=5
4150 result=result
4160 IF result<>560 PROCtrip_error
4170 IF E%<>180 PROCtrip_error
4180 IF F%<>320 PROCtrip_error
4190 ENDPROC

5000 DEF PROCrepeat_trailing
5010 REM   ============================================================
5020 PRINT "4. REPEAT with trailing statements"
5030 REM   ============================================================
5040 REPEAT Q%=Q%+7:UNTIL Q%>50:R%=Q%
5050 IF R%<>56 PROCtrip_error
5060 ENDPROC

6000 DEF PROCrepeat_nested_single_line
6010 REM   ============================================================
6020 PRINT "5. Nested REPEAT loops on a single line"
6030 REM   ============================================================
6040 M=0:N=0:P=0
6050 REPEAT M=M+1:N=0:REPEAT N=N+1:P=P+M*N:UNTIL N>3:UNTIL M>4
6060 IF P<>150 PROCtrip_error
6070 ENDPROC

7000 DEF PROCfor_simple
7010 REM   ============================================================
7020 PRINT "6. Simple FOR loops"
7030 REM   ============================================================
7040 val=0
7050 FOR n=1 TO 11
7060 val=val+n
7070 NEXT n
7080 IF val<>66 PROCtrip_error
7090 val=0
7100 FOR n=1 TO 21 STEP 2
7110 val=val+n
7120 NEXT
7130 IF val<>121 PROCtrip_error
7140 val=0
7150 FOR n=20 TO 0 STEP -3
7160 val=val+n
7170 NEXT
7180 IF val<>77 PROCtrip_error
7190 ENDPROC

8000 DEF PROCfor_nested
8010 REM   ============================================================
8020 PRINT "7. Nested FOR loops"
8030 REM   ============================================================
8040 val=0
8050 FOR m=1 TO 11
8060 FOR n=1 TO 5
8070 val=val+1
8080 NEXT n
8090 NEXT m
8100 IF val<>55 PROCtrip_error
8110 val = 0
8120 FOR p=1 TO 7 STEP 2:FOR q=1 TO 5:val=val+1:NEXT:NEXT
8130 IF val<>20 PROCtrip_error
8140 ENDPROC

9000 DEF PROCfor_unwinding
9010 REM   ============================================================
9020 PRINT "8. FOR loops with stack unwinding"
9030 REM   ============================================================
9040 val=0
9050 FOR m=1 TO 11
9060 FOR n=1 TO 5
9070 val=val+1
9080 NEXT m
9090 IF val<>11 PROCtrip_error
9100 ENDPROC

10000 DEF PROCproc_multi_level
10010 REM   ============================================================
10020 PRINT "9. Multiple levels of procedures with arguments"
10030 REM   ============================================================
10040 var=5:str$="abc":const=1
10050 LOCAL loc
10060 loc=5
10070 IF const<>1 PROCtrip_error
10080 IF var<>5 PROCtrip_error
10090 IF str$<>"abc" PROCtrip_error
10100 IF loc<>5 PROCtrip_error
10110 PROCwith_args(var, str$)
10120 IF const<>5 PROCtrip_error
10130 IF var<>5 PROCtrip_error
10140 IF str$<>"abc" PROCtrip_error
10150 IF loc<>5 PROCtrip_error
10160 ENDPROC

11000 DEF PROCfn_basic
11010 REM   ============================================================
11020 PRINT "10. Basic function"
11030 REM   ============================================================
11040 IF FNhypot(3, 4)<>5 PROCtrip_error
11050 ENDPROC

12000 DEF PROCfn_recursive
12010 REM   ============================================================
12020 PRINT "10. Recursive function"
12030 REM   ============================================================
12040 IF FNfact(10)<>3628800 PROCtrip_error
12050 ENDPROC

13000 DEF PROC_on_goto
13010 REM   ============================================================
13020 PRINT "11. ON GOTO"
13030 REM   ============================================================
13040 ON 3 GOTO -1, -1, 13060, -1
13050 PROCtrip_error
13060 GOTO 13070
13070
13080 ON 0 GOTO 13090 ELSE GOTO 13100
13090 PROCtrip_error
13100 
13110 ON 2 GOTO 13120 ELSE GOTO 13130
13120 PROCtrip_error
13130 
13140 ENDPROC

14000 DEF PROC_on_gosub
14010 REM   ============================================================
14020 PRINT "12. ON GOSUB"
14030 REM   ============================================================
14040 E%=0:ON 3 GOSUB -1, -1, 14200, -1
14050 IF E%<>1 PROCtrip_error
14060
14070 ON 0 GOSUB -1 ELSE GOTO 14090
14080 PROCtrip_errpr
14090
14100 ON 2 GOSUB -1 ELSE GOTO 14120
14110 PROCtrip_error
14120
14130 ENDPROC

14200 REM Test subroutine
14210 E%=1
14220 RETURN

500000 DEF PROCwith_args(var, str$)
500010 var=var+2:str$=str$+"def":const=const+1
500020 IF var=2 ENDPROC:REM Terminate when 0 is passed
500030 LOCAL loc,some_string$
500040 loc=8:some_string$=some_string$+"hello"
500050 IF const<>2 PROCtrip_error
500060 IF var<>7 PROCtrip_error
500070 IF str$<>"abcdef" PROCtrip_error
500080 IF loc<>8 PROCtrip_error
500090 PROCwith_args_level_2(var, str$)
500100 IF const<>5 PROCtrip_error
500110 IF var<>7 PROCtrip_error
500120 IF str$<>"abcdef" PROCtrip_error
500130 IF loc<>8 PROCtrip_error
500140 ENDPROC

500200 DEF PROCwith_args_level_2(var, str$)
500210 var=var+3:str$=str$+"ghi":const=const+1
500220 IF const<>3 PROCtrip_error
500230 IF var<>10 PROCtrip_error
500240 IF str$<>"abcdefghi" PROCtrip_error
500250 PROCwith_args_level_3(var, str$)
500260 IF const<>5 PROCtrip_error
500270 IF var<>10 PROCtrip_error
500280 IF str$<>"abcdefghi" PROCtrip_error
500290 ENDPROC

500400 DEF PROCwith_args_level_3(var, str$)
500410 var=var+6:str$=str$+"jkl":const=const+1
500420 IF const<>4 PROCtrip_error
500430 IF var<>16 PROCtrip_error
500440 IF str$<>"abcdefghijkl" PROCtrip_error
500450 PROCwith_args(0, "don't recurse")
500460 IF const<>5 PROCtrip_error
500470 IF var<>16 PROCtrip_error
500480 IF str$<>"abcdefghijkl" PROCtrip_error
500490 ENDPROC

600000 DEF FNhypot(a, b)
600010 h2 = a^2 + b^2
600020 h = SQR(h2)
600030 =h

600100 DEF FNfact(n)
600110 LOCAL result
600120 IF n<2 THEN result=1 ELSE result=n*FNfact(n-1)
600130 =result

1000000 DEF PROCtrip_error
1000010 REM ==============================================================
1000020 REM Deliberate division by zero to fail a test
1000030 REM ==============================================================
1000040 PRINT "Test failed!"
1000050 PRINT 4/0
1000060 ENDPROC
